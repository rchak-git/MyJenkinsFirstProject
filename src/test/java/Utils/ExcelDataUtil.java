package Utils;

// Code Generated by Sidekick is for learning and experimentation purposes only.
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import java.io.FileInputStream;
import java.io.IOException;
import java.util.*;

public class ExcelDataUtil {

    // Set your Excel file path here
    private static final String EXCEL_FILE_PATH = PathUtil.getTestResourcePath();

    /**
     * Returns a map of column names to values for the row where DATA_ID matches dataId.
     */
    public static Map<String, String> getDataById(String sheetName, String dataId) {
        Map<String, String> dataMap = new HashMap<>();
        try (FileInputStream fis = new FileInputStream(EXCEL_FILE_PATH);
             Workbook workbook = new XSSFWorkbook(fis)) {

            Sheet sheet = workbook.getSheet(sheetName);
            if (sheet == null) {
                throw new IllegalArgumentException("Sheet " + sheetName + " does not exist in the workbook.");
            }

            Iterator<Row> rowIterator = sheet.iterator();
            if (!rowIterator.hasNext()) {
                throw new IllegalArgumentException("Sheet " + sheetName + " is empty.");
            }

            // Read header row
            Row headerRow = rowIterator.next();
            int colCount = headerRow.getLastCellNum();
            int dataIdColIndex = -1;
            String[] headers = new String[colCount];
            for (int i = 0; i < colCount; i++) {
                headers[i] = headerRow.getCell(i).getStringCellValue();
                if ("DATA_ID".equalsIgnoreCase(headers[i])) {
                    dataIdColIndex = i;
                }
            }
            if (dataIdColIndex == -1) {
                throw new IllegalArgumentException("DATA_ID column not found in sheet " + sheetName);
            }

            // Find the row with matching DATA_ID
            while (rowIterator.hasNext()) {
                Row row = rowIterator.next();
                Cell dataIdCell = row.getCell(dataIdColIndex);
                if (dataIdCell == null) continue;
                String cellValue = dataIdCell.getCellType() == CellType.STRING
                        ? dataIdCell.getStringCellValue()
                        : String.valueOf((int) dataIdCell.getNumericCellValue());
                if (dataId.equals(cellValue)) {
                    for (int i = 0; i < colCount; i++) {
                        Cell cell = row.getCell(i);
                        String value = "";
                        if (cell != null) {
                            switch (cell.getCellType()) {
                                case STRING:
                                    value = cell.getStringCellValue();
                                    break;
                                case NUMERIC:
                                    value = String.valueOf(cell.getNumericCellValue());
                                    break;
                                case BOOLEAN:
                                    value = String.valueOf(cell.getBooleanCellValue());
                                    break;
                                case FORMULA:
                                    value = cell.getCellFormula();
                                    break;
                                default:
                                    value = "";
                            }
                        }
                        dataMap.put(headers[i], value);
                    }
                    break; // Stop after finding the first match
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return dataMap;
    }


    public static List<Map<String, String>> getAllRows(String sheetName) {
        List<Map<String, String>> rows = new ArrayList<>();
        String excelFilePath = "path/to/your/excel/file.xlsx"; // Replace with your dynamic path logic

        try (FileInputStream fis = new FileInputStream(EXCEL_FILE_PATH);
             Workbook workbook = new XSSFWorkbook(fis)) {

            Sheet sheet = workbook.getSheet(sheetName);
            if (sheet == null) {
                throw new IllegalArgumentException("Sheet " + sheetName + " does not exist");
            }

            Iterator<Row> rowIterator = sheet.iterator();
            if (!rowIterator.hasNext()) {
                return rows; // Empty sheet
            }

            // Read header row
            Row headerRow = rowIterator.next();
            List<String> headers = new ArrayList<>();
            for (Cell cell : headerRow) {
                headers.add(cell.getStringCellValue());
            }

            // Read data rows
            while (rowIterator.hasNext()) {
                Row dataRow = rowIterator.next();
                Map<String, String> rowData = new HashMap<>();
                for (int i = 0; i < headers.size(); i++) {
                    Cell cell = dataRow.getCell(i, Row.MissingCellPolicy.CREATE_NULL_AS_BLANK);
                    cell.setCellType(CellType.STRING);
                    rowData.put(headers.get(i), cell.getStringCellValue());
                }
                rows.add(rowData);
            }

        } catch (IOException e) {
            e.printStackTrace();
            // Handle or rethrow as needed
        }
        return rows;
    }
}

