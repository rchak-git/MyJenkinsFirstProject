package tests.base;
// Code Generated by Sidekick is for learning and experimentation purposes only.
import Utils.ExtentReportSetup;
import Utils.ScreenshotUtil;
import com.aventstack.extentreports.MediaEntityBuilder;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.ITestResult;
import org.testng.annotations.*;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;

import java.lang.reflect.Method;

public class BaseTest {

    // Thread-safe WebDriver for parallel execution
    protected static ThreadLocal<WebDriver> driver = new ThreadLocal<>();

    // Thread-safe ExtentTest for parallel execution
    public static ThreadLocal<ExtentTest> test = new ThreadLocal<>();

    // Single instance for the report
    protected static ExtentReports extent;



    @BeforeSuite
    public void setupSuite() {
        // Initialize ExtentReports using your utility method
        extent = ExtentReportSetup.setupExtentReport();
    }

    @BeforeMethod
    public void setupTest(Method method) {
        // Set up a new WebDriver instance per test method/thread
         WebDriver webDriver = new ChromeDriver();
        webDriver.manage().window().maximize();
        driver.set(webDriver);

        // Create a new ExtentTest instance for this test method
        test.set(extent.createTest(method.getName()));
    }

    @AfterMethod
    public void afterEachTest(ITestResult result) {
        // Always check if test.get() is not null
/*
        if (test.get() != null && result.getStatus() == ITestResult.FAILURE) {
            String screenshotPath = ScreenshotUtil.captureScreenshot(driver.get(), result.getName());
           // test.get().fail("Test Failed. Screenshot below:")
                  //  .addScreenCaptureFromPath(screenshotPath);
            test.get().fail("Test failed", MediaEntityBuilder.createScreenCaptureFromPath(screenshotPath).build());
        }
*/


        // Quit WebDriver after each test to ensure clean state
        if (driver.get() != null) {
            driver.get().quit();
            driver.remove();
        }

        // Remove ExtentTest from ThreadLocal to avoid memory leaks
        test.remove();
    }

    @AfterSuite
    public void tearDownSuite() {
        if (extent != null) {
            extent.flush();
        }
    }

    // Utility method to get the current thread's WebDriver
    public static WebDriver getDriver() {
        return driver.get();
    }
}
